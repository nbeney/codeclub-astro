---
import fs from 'node:fs';

const { language = "python", src } = Astro.props;

const hasSlot = await Astro.slots.has('default');

if (!hasSlot && !src) throw new Error(`Must provide a slot or a path when using the CodeBlock component`);

const code = hasSlot
    ? await Astro.slots.render('default')
    : fs.readFileSync(src, 'utf-8');
---

<pre><code class={"language-" + language}>{code.trim()}</code></pre>

<script is:inline src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.2/highlight.min.js"></script>

<script is:inline>
    window.addEventListener('load', function() {
        hljs.highlightAll();
    });

    window.addEventListener('load', function() {
        const codeElements = document.querySelectorAll('pre > code');
        for (const codeElement of codeElements) {
            const iconElement = document.createElement('i');
            iconElement.className = 'bi bi-clipboard copy-icon';
            codeElement.appendChild(iconElement);

            codeElement.addEventListener('click', function() {
                const content = codeElement.innerText;
                navigator.clipboard.writeText(content)
                    .then(() => {
                        console.log('Copied to clipboard: ' + content);
                    })
                    .catch(err => {
                        console.error('Unable to copy to clipboard', err);
                    });
            });
        }
    });
</script>

<style is:inline>
    @import url('https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.2/highlight.min.js');

    .hljs-number {
        color: firebrick;
    }

    pre > code {
        position: relative;
    }

    pre > code > i {
        position: absolute;
        top: 0;
        right: 0;
        margin: 5px 5px 0 0;
    }

    pre > code:hover {
        cursor: pointer;
    }
</style>
